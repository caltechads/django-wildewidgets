error_log  /dev/stderr info;
pid /tmp/nginx.pid;
daemon off;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Enable on-the-fly gzip compression of HTML, javascript, CSS, plaintext, and xml.
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;

  # Use a more fine-grained timestamp: include milliseconds so we can order
  # requests properly
  map "$time_iso8601 # $msec" $time_iso8601_ms {
    "~(^.+)-0[78]:00 # \d+\.(\d+)$" $1,$2;
  }
  log_format json_combined escape=json
  '{'
    '"type":"access",'
    '"program":"nginx",'
    '"time_local":"$time_iso8601_ms",'
    '"remote_addr":"$http_x_forwarded_for",'
    '"remote_user":"$http_user",'
    '"request":"$request",'
    '"status":"$status",'
    '"method":"$request_method",'
    '"path":"$uri",'
    '"response_length":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent",'
    '"host":"$http_host"'
  '}';
  access_log /dev/stdout json_combined;

  # Improves the performance of serving static files, which is most of what
  # nginx does for us, so performance is key.
  sendfile on;
  tcp_nopush on;

  client_body_temp_path /var/tmp/nginx/client_body;
  proxy_temp_path /var/tmp/nginx/proxy;
  fastcgi_temp_path /var/tmp/nginx/fastcgi;
  uwsgi_temp_path /var/tmp/nginx/uwsgi;
  scgi_temp_path /var/tmp/nginx/scgi;

  server {
    listen 8443 ssl http2;

    location ^~ /static/demo/  {
      gzip_static on;
      expires max;
      add_header Cache-Control public; # nosemgrep
      alias /static/;
    }

    server_name localhost;

    ######## SECURITY CONFIGURATION ########

    add_header Strict-Transport-Security "max-age=63072000";
    add_header X-XSS-Protection "1; mode=block";

    ############# SSL CONFIGS ##############

    ssl_certificate /certs/localhost.crt;
    ssl_certificate_key /certs/localhost.key;
    ssl_verify_client off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets on;

    ######## GENERIC server CONFIGS ########

    server_name localhost;
    client_max_body_size 100M;
    client_header_timeout 305s;
    client_body_timeout 305s;
    keepalive_timeout 305s;

    if ($request_method ~ ^(TRACE|TRACK)$ ) {
       return 405;
    }

    underscores_in_headers on;
    server_tokens off;

    # nginx stats location
    location = /server-status {
      stub_status;
      access_log off;
      log_not_found off;
    }


    # Create the view that the ALB Target Group health check will look at.
    location = /lb-status {
      return 200 'Hello, Mr. Load balancer.';
      add_header Content-Type text/plain; # nosemgrep
    }

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location / {
      proxy_pass http://unix:/tmp/demo.sock;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded_Proto $scheme;
      proxy_http_version 1.1;
      proxy_intercept_errors on;
      proxy_redirect off;
      proxy_read_timeout 305s;
      proxy_connect_timeout 305s;
      proxy_send_timeout 305s;
    }
  }
}
